MATCH (person:Person)<-[:POST_HAS_CREATOR|COMMENT_HAS_CREATOR]-(message)<-[like:LIKES_COMMENT|LIKES_POST]-(liker:Person)
  WHERE id(person) == $personId
WITH
    liker,
    message,
    like.creationDate AS likeTime,
    person,
    id(message) AS messageId
ORDER BY
    likeTime DESC,
    messageId ASC
WITH
    liker,
    head(collect({msg:message, likeTime:likeTime})) AS latestLike,
    person
OPTIONAL MATCH p = (liker)-[:KNOWS]-(person)
RETURN
    toInteger(substr(id(liker), 2)) AS personId,
    liker.Person.firstName AS personFirstName,
    liker.Person.lastName AS personLastName,
    latestLike.likeTime AS likeCreationDate,
    id(latestLike.msg) AS messageId,
    CASE exists(latestLike.msg.message.content)
      WHEN true THEN latestLike.msg.message.content
      ELSE latestLike.msg.message.imageFile
    END AS messageContent,
    latestLike.msg.message.creationDate AS messageCreationDate,
    p IS NULL AS isNew
ORDER BY
    likeCreationDate DESC,
    personId ASC
LIMIT 20